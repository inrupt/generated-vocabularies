/*
 * Proprietary and Confidential
 *
 * Copyright 2020 Inrupt Inc. - all rights reserved.
 *
 * Do not use without explicit permission from Inrupt Inc.
 */

import { LitVocabTerm, getLocalStore } from "@inrupt/lit-vocab-term";
import dataFactory from "@rdfjs/data-model";
const namedNode = dataFactory.namedNode;

/**
  Generated by artifact generator [@inrupt/lit-artifact-generator], version [0.10.5]
  as part of artifact: [vocab-core], version: [0.3.3]
  at 'Tuesday, May 5, 2020 4:18 PM'.

  Vocabulary built from vocab list file: [lit-rdf-vocab/Core/Vocab-List-LIT-Core.yml].

  The LIT Metrics Ontology contains vocab terms to represent metric statistics
 */

function _NS(localName: string) { 
  return (namedNode("https://w3id.org/lit/vocab/metric#" + localName));
}

const MET = {
  PREFIX: "met",
  NAMESPACE: "https://w3id.org/lit/vocab/metric#",
  PREFIX_AND_NAMESPACE: { "met": "https://w3id.org/lit/vocab/metric#" },
  NS: _NS,

  // *****************
  // All the Classes.
  // *****************

  /**
   * This represent a metric counter that counts the amount of events that happen
   */
  Counter: new LitVocabTerm(
    _NS("Counter"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`Counter`, "en")
    .addComment(`This represent a metric counter that counts the amount of events that happen`, "en"),

  /**
   * This represent a metric timer that times the amount of time it takes for events or processes to complete
   */
  Timer: new LitVocabTerm(
    _NS("Timer"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`Timer`, "en")
    .addComment(`This represent a metric timer that times the amount of time it takes for events or processes to complete`, "en"),

  // *******************
  // All the Properties.
  // *******************

  /**
   * The represent the metric that is been taken. For example; a counter or a timer
   */
  subject: new LitVocabTerm(
    _NS("subject"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`metric subject`, "en")
    .addComment(`The represent the metric that is been taken. For example; a counter or a timer`, "en"),

  /**
   * This percentile usually indicates that 50 percentage falls below this percentile.
   */
  p50: new LitVocabTerm(
    _NS("p50"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`50th Percentile`, "en")
    .addComment(`This percentile usually indicates that 50 percentage falls below this percentile.`, "en"),

  /**
   * This percentile usually indicates that 75 percentage falls below this percentile.
   */
  p75: new LitVocabTerm(
    _NS("p75"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`75th Percentile`, "en")
    .addComment(`This percentile usually indicates that 75 percentage falls below this percentile.`, "en"),

  /**
   * This percentile usually indicates that 95 percentage falls below this percentile.
   */
  p95: new LitVocabTerm(
    _NS("p95"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`95th Percentile`, "en")
    .addComment(`This percentile usually indicates that 95 percentage falls below this percentile.`, "en"),

  /**
   * This percentile usually indicates that 98 percentage falls below this percentile.
   */
  p98: new LitVocabTerm(
    _NS("p98"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`98th Percentile`, "en")
    .addComment(`This percentile usually indicates that 98 percentage falls below this percentile.`, "en"),

  /**
   * This percentile usually indicates that 99 percentage falls below this percentile.
   */
  p99: new LitVocabTerm(
    _NS("p99"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`99th Percentile`, "en")
    .addComment(`This percentile usually indicates that 99 percentage falls below this percentile.`, "en"),

  /**
   * This percentile usually indicates that 99.9 percentage falls below this percentile.
   */
  p999: new LitVocabTerm(
    _NS("p999"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`75th Percentile`, "en")
    .addComment(`This percentile usually indicates that 99.9 percentage falls below this percentile.`, "en"),

  /**
   * This contains the smallest value
   */
  min: new LitVocabTerm(
    _NS("min"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`minimum`, "en")
    .addComment(`This contains the smallest value`, "en"),

  /**
   * This contains the largest value
   */
  max: new LitVocabTerm(
    _NS("max"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`maximum`, "en")
    .addComment(`This contains the largest value`, "en"),

  /**
   * This contains the mean or average value
   */
  mean: new LitVocabTerm(
    _NS("mean"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`mean`, "en")
    .addComment(`This contains the mean or average value`, "en"),

  /**
   * The standard deviation is a measure of the amount of variation or dispersion of a set of values
   */
  stddev: new LitVocabTerm(
    _NS("stddev"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`standard deviation`, "en")
    .addComment(`The standard deviation is a measure of the amount of variation or dispersion of a set of values`, "en"),

  /**
   * The the number of event occurred
   */
  count: new LitVocabTerm(
    _NS("count"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`count`, "en")
    .addComment(`The the number of event occurred`, "en"),

  /**
   * A mean rate refers to the average occurrence of events over a specific interval in time
   */
  meanRate: new LitVocabTerm(
    _NS("meanRate"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`mean rate`, "en")
    .addComment(`A mean rate refers to the average occurrence of events over a specific interval in time`, "en"),

  /**
   * A mean rate refers to the average occurrence of events over a specific interval in time
   */
  oneMeanRate: new LitVocabTerm(
    _NS("oneMeanRate"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`one mean rate`, "en")
    .addComment(`A mean rate refers to the average occurrence of events over a specific interval in time`, "en"),

  /**
   * A mean rate refers to the average occurrence of events over a specific interval in time
   */
  fiveMeanRate: new LitVocabTerm(
    _NS("fiveMeanRate"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`five mean rate`, "en")
    .addComment(`A mean rate refers to the average occurrence of events over a specific interval in time`, "en"),

  /**
   * A mean rate refers to the average occurrence of events over a specific interval in time
   */
  fifteenMeanRate: new LitVocabTerm(
    _NS("fifteenMeanRate"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`fifteen mean rate`, "en")
    .addComment(`A mean rate refers to the average occurrence of events over a specific interval in time`, "en"),

};

export { MET };
