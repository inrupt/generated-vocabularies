    /*
 * Proprietary and Confidential
 *
 * Copyright 2020 Inrupt Inc. - all rights reserved.
 *
 * Do not use without explicit permission from Inrupt Inc.
 */

const $rdf = require("rdflib");

/**
  Generated by artifact generator [@inrupt/lit-artifact-generator], version [0.10.5]
  as part of artifact: [vocab-solid-common], version: [0.3.2]
  at 'Tuesday, May 5, 2020 4:20 PM'.

  Vocabulary built from vocab list file: [solid-rdf-vocab/Common/Vocab-List-Solid-Common.yml].
 */

const RDFLIB_NAMESPACE = new $rdf.Namespace("http://www.w3.org/ns/solid/terms#");

const _NAMESPACE = "http://www.w3.org/ns/solid/terms#";
function _NS (localName) {
  return (_NAMESPACE + localName);
}

const SOLID = {
  PREFIX: "solid",
  NAMESPACE: _NAMESPACE,
  PREFIX_AND_NAMESPACE: { "solid": "http://www.w3.org/ns/solid/terms#" },
  NS: _NS,

    // *****************
    // All the Classes.
    // *****************

    /**
     * A Solid account.
     */
    Account: $rdf.sym(_NS("Account")),

    /**
     * A resource containing notifications.
     */
    Inbox: $rdf.sym(_NS("Inbox")),

    /**
     * Listed Type Index is a registry of resources that are publicly discoverable by outside users and applications.
     */
    ListedDocument: $rdf.sym(_NS("ListedDocument")),

    /**
     * A notification resource.
     */
    Notification: $rdf.sym(_NS("Notification")),

    /**
     * A patch expresses conditional modifications to a resource that has an RDF-based representation.
     */
    Patch: $rdf.sym(_NS("Patch")),

    /**
     * A resource containing time ordered items and sub-containers.  Sub-containers may be desirable in file based systems to split the timeline into logical components e.g. /yyyy-mm-dd/ as used in ISO 8061.
     */
    Timeline: $rdf.sym(_NS("Timeline")),

    /**
     * A index of type registries for resources. Applications can register the RDF type they use and list them in the index resource.
     */
    TypeIndex: $rdf.sym(_NS("TypeIndex")),

    /**
     * The registered types that map a RDF classes/types to their locations using either `instance` or `instanceContainer` property.
     */
    TypeRegistration: $rdf.sym(_NS("TypeRegistration")),

    /**
     * Unlisted Type Index is a registry of resources that are private to the user and their apps, for types that are not publicly discoverable.
     */
    UnlistedDocument: $rdf.sym(_NS("UnlistedDocument")),

    // *******************
    // All the Properties.
    // *******************

    /**
     * A solid account belonging to an Agent.
     */
    account: $rdf.sym(_NS("account")),

    /**
     * The triple patterns this patch removes from the document.
     */
    deletes: $rdf.sym(_NS("deletes")),

    /**
     * A class that is used to map an listed or unlisted type index.
     */
    forClass: $rdf.sym(_NS("forClass")),

    /**
     * Deprecated pointer to a Linked Data Notifications inbox; please use http://www.w3.org/ns/ldp#inbox instead.
     */
    inbox: $rdf.sym(_NS("inbox")),

    /**
     * The triple patterns this patch adds to the document.
     */
    inserts: $rdf.sym(_NS("inserts")),

    /**
     * Maps a type to an individual resource, typically an index or a directory listing resource.
     */
    instance: $rdf.sym(_NS("instance")),

    /**
     * Maps a type to a container which the client would have to list to get the instances of that type.
     */
    instanceContainer: $rdf.sym(_NS("instanceContainer")),

    /**
     * The login URI of a given server.
     */
    loginEndpoint: $rdf.sym(_NS("loginEndpoint")),

    /**
     * The logout URI of a given server.
     */
    logoutEndpoint: $rdf.sym(_NS("logoutEndpoint")),

    /**
     * Notification resource for an inbox.
     */
    notification: $rdf.sym(_NS("notification")),

    /**
     * Points to an unlisted type index resource.
     */
    privateTypeIndex: $rdf.sym(_NS("privateTypeIndex")),

    /**
     * Points to a listed type index resource.
     */
    publicTypeIndex: $rdf.sym(_NS("publicTypeIndex")),

    /**
     * Points to a TypeIndex resource.
     */
    typeIndex: $rdf.sym(_NS("typeIndex")),

    /**
     * Indicates if a message has been read or not. This property should have a boolean datatype.
     */
    read: $rdf.sym(_NS("read")),

    /**
     * The preferred OpenID Connect issuer URI for a given Web ID.
     */
    oidcIssuer: $rdf.sym(_NS("oidcIssuer")),

    /**
     * The document to which this patch applies.
     */
    patches: $rdf.sym(_NS("patches")),

    /**
     * Timeline for a given resource.
     */
    timeline: $rdf.sym(_NS("timeline")),

    /**
     * The conditions the document and the inserted and deleted triple patterns need to satisfy in order for the patch to be applied.
     */
    where: $rdf.sym(_NS("where")),

    /**
     * The quota of non-volatile memory that is available for the account (in bytes)
     */
    storageQuota: $rdf.sym(_NS("storageQuota")),

    /**
     * The amount of non-volatile memory that the account have used (in bytes)
     */
    storageUsage: $rdf.sym(_NS("storageUsage")),

  //
  // Marker allowing us put commas at the end of all lines above (only the last line does not have a comma).
  //
  END_OF_VOCAB: "End of vocab."
}

module.exports = SOLID;
