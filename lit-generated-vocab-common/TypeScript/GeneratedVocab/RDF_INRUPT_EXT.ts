/*
 * Proprietary and Confidential
 *
 * Copyright 2020 Inrupt Inc. - all rights reserved.
 *
 * Do not use without explicit permission from Inrupt Inc.
 */

import { LitVocabTerm, getLocalStore } from "@inrupt/lit-vocab-term";
import dataFactory from "@rdfjs/data-model";
const namedNode = dataFactory.namedNode;

/**
  Generated by artifact generator [@inrupt/lit-artifact-generator], version [0.10.5]
  as part of artifact: [vocab-common], version: [0.3.4]
  at 'Tuesday, May 5, 2020 4:12 PM'.

  Vocabulary built from vocab list file: [lit-rdf-vocab/Common/Vocab-List-LIT-Common.yml].
 */

function _NS(localName: string) { 
  return (namedNode("http://www.w3.org/1999/02/22-rdf-syntax-ns#" + localName));
}

const RDF_INRUPT_EXT = {
  PREFIX: "rdf-inrupt-ext",
  NAMESPACE: "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
  PREFIX_AND_NAMESPACE: { "rdf-inrupt-ext": "http://www.w3.org/1999/02/22-rdf-syntax-ns#" },
  NS: _NS,


  // *******************
  // All the Properties.
  // *******************

  /**
   * The subject is an instance of a class.
   */
  type: new LitVocabTerm(
    _NS("type"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`Tipo`, "es")
    .addLabelNoLanguage(`type`)
    .addCommentNoLanguage(`The subject is an instance of a class.`),

};

export { RDF_INRUPT_EXT };
